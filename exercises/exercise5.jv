pipeline GtfsPipeline {

    GTFSExtractor -> ZipInterpreter;

    ZipInterpreter
        -> StopsFilePicker 
        -> StopsTextFileInterpreter
        -> StopsCSVInterpreter 
        -> StopsTableInterpreter 
        -> StopsLoader;

    block GTFSExtractor oftype HttpExtractor {
        url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
    }

    block ZipInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block StopsFilePicker oftype FilePicker {
        path: "/stops.txt";
    }

    block StopsTextFileInterpreter oftype TextFileInterpreter { }
    block StopsCSVInterpreter oftype CSVInterpreter {
        enclosing: '"';
    }

    valuetype isValidZoneid oftype integer {
        constraints: [ZoneIdConstraint];
    }

    valuetype isValidLat oftype decimal {
        constraints: [LatitudeConstraint];
    }

    valuetype isValidLong oftype decimal {
        constraints: [LongitudeConstraint];
    }

    constraint ZoneIdConstraint on integer: 
    value == 2001;

    constraint LatitudeConstraint oftype RangeConstraint {
        lowerBound: -90;
        upperBound: 90;
    }

    constraint LongitudeConstraint oftype RangeConstraint {
        lowerBound: -90;
        upperBound: 90;
    }

    block StopsTableInterpreter oftype TableInterpreter {
        header: false;
        columns:[
            "stop_id" oftype integer,
            "stop_name" oftype text,
            "stop_lat" oftype isValidLat,
            "stop_lon" oftype isValidLong,
            "zone_id" oftype isValidZoneid,
        ];
    }

    block StopsLoader oftype SQLiteLoader {
        table: "stops";
        file: "./gtfs.sqlite";
    }
}